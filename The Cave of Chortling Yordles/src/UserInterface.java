
import java.awt.event.KeyEvent;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Daniel
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form UserInterface
     */
    public UserInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        txtInput = new javax.swing.JTextField();
        btnEnter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtOutput.setColumns(20);
        txtOutput.setEditable(false);
        txtOutput.setLineWrap(true);
        txtOutput.setRows(5);
        txtOutput.setText("You find yourself in a dungeon, you appear to be in a corner and you can head East. Off in the distance you hear a faint \"Captain Teemo on duty\". What. The. Hell. Type info at any time to receive the room's description.");
        txtOutput.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtOutput);

        btnEnter.setText("Enter");
        btnEnter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnterMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEnter)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInput)
                    .addComponent(btnEnter))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnEnterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnterMouseClicked

        input= txtInput.getText();
        input=input.toUpperCase();
        if (room==9001){
            output="The dungeon appears to have dissappeared, go away.";
        }
        else if (input.equals("NORTH")||input.equals("SOUTH")||input.equals("EAST")||input.equals("WEST")){
            direction(input);
        }
        else if (input.indexOf("LEVER")>=0&&room==3){
            output="You pull the leaver and hear a door unlock somewhere";
            lever=true;
        }
        else if (input.indexOf("MUSHROOM")>=0&&room==10){
            output="You head towards the mushrooms, but they explode and you die, good job";
            room=1;
        }
        else if (input.equals("INFO")){
            if (room==1||room==9||room==11)
                output="You are dead";
            else
                output=roomDescription[room-1];               
        }
        else
            output="Unknown Command";
        txtOutput.setText(output);
        txtInput.setText("");
        
    }//GEN-LAST:event_btnEnterMouseClicked

    public void direction(String Direction){
        switch (Direction){
            case "NORTH":
                if (room==14||room==10||room==6||room==7||room==8||room==12||room==16){
                    room-=4;
                    output=roomDescription[room-1];
                }
                else if (room==9||room==1||room==11)
                    output="You can't move, you are dead";
                else
                    output="You can not head that direction, try again";
                break;
            case "SOUTH":
                if (room==8&&lever==false){
                        output="The door is locked and you can't head that way, there doesn't appear to be a key hole, try to find a lever that will unlock it";                        
                }
                else if (room==10||room==6||room==5||room==8||room==4||room==3||room==12||room==2){
                    room+=4;
                    output=roomDescription[room-1];
                }
                else if (room==9||room==1||room==11)
                    output="You can't move, you are dead";
                else if (room==16){
                    output="Congratulations, you have made it out alive";
                    room=9001;
                }
                else
                    output="You can not head that direction, try again";
                break;
            case "EAST":
                if (room==3||room==7||room==6||room==5||room==10||room==14||room==13){
                    room+=1;
                    output=roomDescription[room-1];
                }
                else if (room==9||room==1||room==11)
                    output="You can't move, you are dead";
                else
                    output="You can not head that direction, try again";
                
                break;
            case "WEST":
                if(room==2||room==4||room==6||room==7||room==8||room==14||room==15){
                    room-=1;
                    output=roomDescription[room-1];
                }
                else if (room==9||room==1||room==11)
                    output="You can't move, you are dead";
                else
                    output="You can not head that direction, try again";
                
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }
    public int room= 13;
    public String output= new String();
    public String input= new String();
    public boolean lever=false;
    public boolean mushroom=false;
    public String[] roomDescription = {"You feel a quick prick, get woozy and fall over, you feel like you are passing out, as you become more faint, you hear 'Size doesn't mean everything' and then you pass out, never to wake up",
    "You enter into a new room, there is an opening to the West and to the South, and lights coming in from the North wall",
    "You head to the North-Western part of the room, on the wall is a lever, you can head East or South, what do?",
    "You head to the North-Eastern corner of the room, there is nothing here, kinda useless, you can head West or South",
    "You enter into a North-South corridor, you can exit it to the East, or head to the end of the corridor, which is South",
    "You enter into what appears to be the main congregation area, there are doors on every side of the room and chairs laying around the room, which way do you want to go?",
    "You find yourself in the largest room you've come across, you appear to be in the South-Western corner, you can head North, East, or West",
    "You find yourself in the South-Eastern part of the room, there is a window on one of the walls, and a door to the south, you can go North or West",
    "You get struck by electricity and turn to ash, congratulations, you died",
    "You find yourself in a room with a fancy chandelier on the ceiling, you can't reach it, but it looks nice, the only other thing in the room is a mushroom in the corner, you can head South, East, or North",
    "You walk into the room and then a jet of fire flies out of one of the corners and you burn to death",
    "You can see a light to the south, there's nothing really in this room, you can head either North or South",
    "You find yourself in a dungeon, you appear to be in a corner and you can head East. Off in the distance you hear a faint 'Captain Teemo on duty'. What. The. Hell.",
    "You find yourself in a new room, nothing really anywhere on the walls, you can head West, North, or South",
    "You find yourself in a corner, you hear somebody say 'Size doesn't mean everything'... Nothing to do here, you can head West",
    "You find yourself at a door that appears to exit the dungeon, you can either head South and leave, or North(WHY?!) and go back in."};
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnter;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField txtInput;
    public javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
